<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto;

/**
 * Protobuf enum : pulsar.proto.AuthMethod
 */
class AuthMethod extends \Protobuf\Enum
{

    /**
     * AuthMethodNone = 0
     */
    const AuthMethodNone_VALUE = 0;

    /**
     * AuthMethodYcaV1 = 1
     */
    const AuthMethodYcaV1_VALUE = 1;

    /**
     * AuthMethodAthens = 2
     */
    const AuthMethodAthens_VALUE = 2;

    /**
     * @var \Pulsar\Proto\AuthMethod
     */
    protected static $AuthMethodNone = null;

    /**
     * @var \Pulsar\Proto\AuthMethod
     */
    protected static $AuthMethodYcaV1 = null;

    /**
     * @var \Pulsar\Proto\AuthMethod
     */
    protected static $AuthMethodAthens = null;

    /**
     * @return \Pulsar\Proto\AuthMethod
     */
    public static function AuthMethodNone()
    {
        if (self::$AuthMethodNone !== null) {
            return self::$AuthMethodNone;
        }

        return self::$AuthMethodNone = new self('AuthMethodNone', self::AuthMethodNone_VALUE);
    }

    /**
     * @return \Pulsar\Proto\AuthMethod
     */
    public static function AuthMethodYcaV1()
    {
        if (self::$AuthMethodYcaV1 !== null) {
            return self::$AuthMethodYcaV1;
        }

        return self::$AuthMethodYcaV1 = new self('AuthMethodYcaV1', self::AuthMethodYcaV1_VALUE);
    }

    /**
     * @return \Pulsar\Proto\AuthMethod
     */
    public static function AuthMethodAthens()
    {
        if (self::$AuthMethodAthens !== null) {
            return self::$AuthMethodAthens;
        }

        return self::$AuthMethodAthens = new self('AuthMethodAthens', self::AuthMethodAthens_VALUE);
    }

    /**
     * @param int $value
     * @return \Pulsar\Proto\AuthMethod
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0:
                return self::AuthMethodNone();
            case 1:
                return self::AuthMethodYcaV1();
            case 2:
                return self::AuthMethodAthens();
            default:
                return null;
        }
    }


}

