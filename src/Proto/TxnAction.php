<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto;

/**
 * Protobuf enum : pulsar.proto.TxnAction
 */
class TxnAction extends \Protobuf\Enum
{

    /**
     * COMMIT = 0
     */
    const COMMIT_VALUE = 0;

    /**
     * ABORT = 1
     */
    const ABORT_VALUE = 1;

    /**
     * @var \Pulsar\Proto\TxnAction
     */
    protected static $COMMIT = null;

    /**
     * @var \Pulsar\Proto\TxnAction
     */
    protected static $ABORT = null;

    /**
     * @return \Pulsar\Proto\TxnAction
     */
    public static function COMMIT()
    {
        if (self::$COMMIT !== null) {
            return self::$COMMIT;
        }

        return self::$COMMIT = new self('COMMIT', self::COMMIT_VALUE);
    }

    /**
     * @return \Pulsar\Proto\TxnAction
     */
    public static function ABORT()
    {
        if (self::$ABORT !== null) {
            return self::$ABORT;
        }

        return self::$ABORT = new self('ABORT', self::ABORT_VALUE);
    }

    /**
     * @param int $value
     * @return \Pulsar\Proto\TxnAction
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0:
                return self::COMMIT();
            case 1:
                return self::ABORT();
            default:
                return null;
        }
    }


}

