<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto\CommandAck;

/**
 * Protobuf enum : pulsar.proto.CommandAck.ValidationError
 */
class ValidationError extends \Protobuf\Enum
{

    /**
     * UncompressedSizeCorruption = 0
     */
    const UncompressedSizeCorruption_VALUE = 0;

    /**
     * DecompressionError = 1
     */
    const DecompressionError_VALUE = 1;

    /**
     * ChecksumMismatch = 2
     */
    const ChecksumMismatch_VALUE = 2;

    /**
     * BatchDeSerializeError = 3
     */
    const BatchDeSerializeError_VALUE = 3;

    /**
     * DecryptionError = 4
     */
    const DecryptionError_VALUE = 4;

    /**
     * @var \Pulsar\Proto\CommandAck\ValidationError
     */
    protected static $UncompressedSizeCorruption = null;

    /**
     * @var \Pulsar\Proto\CommandAck\ValidationError
     */
    protected static $DecompressionError = null;

    /**
     * @var \Pulsar\Proto\CommandAck\ValidationError
     */
    protected static $ChecksumMismatch = null;

    /**
     * @var \Pulsar\Proto\CommandAck\ValidationError
     */
    protected static $BatchDeSerializeError = null;

    /**
     * @var \Pulsar\Proto\CommandAck\ValidationError
     */
    protected static $DecryptionError = null;

    /**
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function UncompressedSizeCorruption()
    {
        if (self::$UncompressedSizeCorruption !== null) {
            return self::$UncompressedSizeCorruption;
        }

        return self::$UncompressedSizeCorruption = new self('UncompressedSizeCorruption', self::UncompressedSizeCorruption_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function DecompressionError()
    {
        if (self::$DecompressionError !== null) {
            return self::$DecompressionError;
        }

        return self::$DecompressionError = new self('DecompressionError', self::DecompressionError_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function ChecksumMismatch()
    {
        if (self::$ChecksumMismatch !== null) {
            return self::$ChecksumMismatch;
        }

        return self::$ChecksumMismatch = new self('ChecksumMismatch', self::ChecksumMismatch_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function BatchDeSerializeError()
    {
        if (self::$BatchDeSerializeError !== null) {
            return self::$BatchDeSerializeError;
        }

        return self::$BatchDeSerializeError = new self('BatchDeSerializeError', self::BatchDeSerializeError_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function DecryptionError()
    {
        if (self::$DecryptionError !== null) {
            return self::$DecryptionError;
        }

        return self::$DecryptionError = new self('DecryptionError', self::DecryptionError_VALUE);
    }

    /**
     * @param int $value
     * @return \Pulsar\Proto\CommandAck\ValidationError
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0:
                return self::UncompressedSizeCorruption();
            case 1:
                return self::DecompressionError();
            case 2:
                return self::ChecksumMismatch();
            case 3:
                return self::BatchDeSerializeError();
            case 4:
                return self::DecryptionError();
            default:
                return null;
        }
    }


}

