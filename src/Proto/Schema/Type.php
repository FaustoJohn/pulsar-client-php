<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto\Schema;

/**
 * Protobuf enum : pulsar.proto.Schema.Type
 */
class Type extends \Protobuf\Enum
{

    /**
     * None = 0
     */
    const None_VALUE = 0;

    /**
     * String = 1
     */
    const String_VALUE = 1;

    /**
     * Json = 2
     */
    const Json_VALUE = 2;

    /**
     * Protobuf = 3
     */
    const Protobuf_VALUE = 3;

    /**
     * Avro = 4
     */
    const Avro_VALUE = 4;

    /**
     * Bool = 5
     */
    const Bool_VALUE = 5;

    /**
     * Int8 = 6
     */
    const Int8_VALUE = 6;

    /**
     * Int16 = 7
     */
    const Int16_VALUE = 7;

    /**
     * Int32 = 8
     */
    const Int32_VALUE = 8;

    /**
     * Int64 = 9
     */
    const Int64_VALUE = 9;

    /**
     * Float = 10
     */
    const Float_VALUE = 10;

    /**
     * Double = 11
     */
    const Double_VALUE = 11;

    /**
     * Date = 12
     */
    const Date_VALUE = 12;

    /**
     * Time = 13
     */
    const Time_VALUE = 13;

    /**
     * Timestamp = 14
     */
    const Timestamp_VALUE = 14;

    /**
     * KeyValue = 15
     */
    const KeyValue_VALUE = 15;

    /**
     * Instant = 16
     */
    const Instant_VALUE = 16;

    /**
     * LocalDate = 17
     */
    const LocalDate_VALUE = 17;

    /**
     * LocalTime = 18
     */
    const LocalTime_VALUE = 18;

    /**
     * LocalDateTime = 19
     */
    const LocalDateTime_VALUE = 19;

    /**
     * ProtobufNative = 20
     */
    const ProtobufNative_VALUE = 20;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $None = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $String = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Json = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Protobuf = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Avro = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Bool = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Int8 = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Int16 = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Int32 = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Int64 = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Float = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Double = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Date = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Time = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Timestamp = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $KeyValue = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $Instant = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $LocalDate = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $LocalTime = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $LocalDateTime = null;

    /**
     * @var \Pulsar\Proto\Schema\Type
     */
    protected static $ProtobufNative = null;

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function None()
    {
        if (self::$None !== null) {
            return self::$None;
        }

        return self::$None = new self('None', self::None_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function String()
    {
        if (self::$String !== null) {
            return self::$String;
        }

        return self::$String = new self('String', self::String_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Json()
    {
        if (self::$Json !== null) {
            return self::$Json;
        }

        return self::$Json = new self('Json', self::Json_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Protobuf()
    {
        if (self::$Protobuf !== null) {
            return self::$Protobuf;
        }

        return self::$Protobuf = new self('Protobuf', self::Protobuf_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Avro()
    {
        if (self::$Avro !== null) {
            return self::$Avro;
        }

        return self::$Avro = new self('Avro', self::Avro_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Bool()
    {
        if (self::$Bool !== null) {
            return self::$Bool;
        }

        return self::$Bool = new self('Bool', self::Bool_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Int8()
    {
        if (self::$Int8 !== null) {
            return self::$Int8;
        }

        return self::$Int8 = new self('Int8', self::Int8_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Int16()
    {
        if (self::$Int16 !== null) {
            return self::$Int16;
        }

        return self::$Int16 = new self('Int16', self::Int16_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Int32()
    {
        if (self::$Int32 !== null) {
            return self::$Int32;
        }

        return self::$Int32 = new self('Int32', self::Int32_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Int64()
    {
        if (self::$Int64 !== null) {
            return self::$Int64;
        }

        return self::$Int64 = new self('Int64', self::Int64_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Float()
    {
        if (self::$Float !== null) {
            return self::$Float;
        }

        return self::$Float = new self('Float', self::Float_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Double()
    {
        if (self::$Double !== null) {
            return self::$Double;
        }

        return self::$Double = new self('Double', self::Double_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Date()
    {
        if (self::$Date !== null) {
            return self::$Date;
        }

        return self::$Date = new self('Date', self::Date_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Time()
    {
        if (self::$Time !== null) {
            return self::$Time;
        }

        return self::$Time = new self('Time', self::Time_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Timestamp()
    {
        if (self::$Timestamp !== null) {
            return self::$Timestamp;
        }

        return self::$Timestamp = new self('Timestamp', self::Timestamp_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function KeyValue()
    {
        if (self::$KeyValue !== null) {
            return self::$KeyValue;
        }

        return self::$KeyValue = new self('KeyValue', self::KeyValue_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function Instant()
    {
        if (self::$Instant !== null) {
            return self::$Instant;
        }

        return self::$Instant = new self('Instant', self::Instant_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function LocalDate()
    {
        if (self::$LocalDate !== null) {
            return self::$LocalDate;
        }

        return self::$LocalDate = new self('LocalDate', self::LocalDate_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function LocalTime()
    {
        if (self::$LocalTime !== null) {
            return self::$LocalTime;
        }

        return self::$LocalTime = new self('LocalTime', self::LocalTime_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function LocalDateTime()
    {
        if (self::$LocalDateTime !== null) {
            return self::$LocalDateTime;
        }

        return self::$LocalDateTime = new self('LocalDateTime', self::LocalDateTime_VALUE);
    }

    /**
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function ProtobufNative()
    {
        if (self::$ProtobufNative !== null) {
            return self::$ProtobufNative;
        }

        return self::$ProtobufNative = new self('ProtobufNative', self::ProtobufNative_VALUE);
    }

    /**
     * @param int $value
     * @return \Pulsar\Proto\Schema\Type
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0:
                return self::None();
            case 1:
                return self::String();
            case 2:
                return self::Json();
            case 3:
                return self::Protobuf();
            case 4:
                return self::Avro();
            case 5:
                return self::Bool();
            case 6:
                return self::Int8();
            case 7:
                return self::Int16();
            case 8:
                return self::Int32();
            case 9:
                return self::Int64();
            case 10:
                return self::Float();
            case 11:
                return self::Double();
            case 12:
                return self::Date();
            case 13:
                return self::Time();
            case 14:
                return self::Timestamp();
            case 15:
                return self::KeyValue();
            case 16:
                return self::Instant();
            case 17:
                return self::LocalDate();
            case 18:
                return self::LocalTime();
            case 19:
                return self::LocalDateTime();
            case 20:
                return self::ProtobufNative();
            default:
                return null;
        }
    }


}

