<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto\CommandLookupTopicResponse;

/**
 * Protobuf enum : pulsar.proto.CommandLookupTopicResponse.LookupType
 */
class LookupType extends \Protobuf\Enum
{

    /**
     * Redirect = 0
     */
    const Redirect_VALUE = 0;

    /**
     * Connect = 1
     */
    const Connect_VALUE = 1;

    /**
     * Failed = 2
     */
    const Failed_VALUE = 2;

    /**
     * @var \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    protected static $Redirect = null;

    /**
     * @var \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    protected static $Connect = null;

    /**
     * @var \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    protected static $Failed = null;

    /**
     * @return \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    public static function Redirect()
    {
        if (self::$Redirect !== null) {
            return self::$Redirect;
        }

        return self::$Redirect = new self('Redirect', self::Redirect_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    public static function Connect()
    {
        if (self::$Connect !== null) {
            return self::$Connect;
        }

        return self::$Connect = new self('Connect', self::Connect_VALUE);
    }

    /**
     * @return \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    public static function Failed()
    {
        if (self::$Failed !== null) {
            return self::$Failed;
        }

        return self::$Failed = new self('Failed', self::Failed_VALUE);
    }

    /**
     * @param int $value
     * @return \Pulsar\Proto\CommandLookupTopicResponse\LookupType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0:
                return self::Redirect();
            case 1:
                return self::Connect();
            case 2:
                return self::Failed();
            default:
                return null;
        }
    }


}

